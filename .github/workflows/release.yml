name: Release
on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  release-linux:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-musl]

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          installation_id: ${{ secrets.FLIPT_RELEASE_BOT_INSTALLATION_ID }}

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashfiles('Cargo.lock') }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../ffs-${{ matrix.target }}.tar.gz ffs 
          cd -

      - name: Upload to Release
        if: github.event_name == 'release'
        shell: bash
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ffs-${{ matrix.target }}.tar.gz

  release-darwin:
    name: release ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-apple-darwin]

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          installation_id: ${{ secrets.FLIPT_RELEASE_BOT_INSTALLATION_ID }}

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashfiles('Cargo.lock') }}

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../ffs-${{ matrix.target }}.tar.gz ffs 
          cd -

      - name: Upload to Release
        if: github.event_name == 'release'
        shell: bash
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ffs-${{ matrix.target }}.tar.gz
